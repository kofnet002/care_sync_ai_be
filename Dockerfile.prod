# Base image with Python 3.10 for ARM64
FROM --platform=linux/arm64 python:3.10-slim-buster AS base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    gettext \
    netcat \
    git \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create and activate virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install Python dependencies
COPY requirements.txt .
RUN pip install --upgrade pip && pip install -r requirements.txt

# Final stage
FROM --platform=linux/arm64 python:3.10-slim-buster

ENV HOME=/user/src \
    APP_HOME=/usr/src/app/caresyncai \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PATH="/opt/venv/bin:$PATH"

# Create app user and directories
RUN groupadd --system app && \
    useradd --system --gid app --shell /bin/bash --create-home app && \
    mkdir -p $APP_HOME/media && \
    mkdir -p $APP_HOME/staticfiles

WORKDIR $APP_HOME

# Install only essential runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    libmagic1 \
    libmagic-dev \
    postgresql-client \
    netcat-traditional \
    dos2unix && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from base
COPY --from=base /opt/venv /opt/venv

# Copy project files
COPY . .

# Ensure scripts are valid for ARM Linux
RUN sed -i 's/\r$//g' entrypoint.prod.sh && chmod +x entrypoint.prod.sh && \
    sed -i 's/\r$//g' start-celeryworker.sh && chmod +x start-celeryworker.sh && \
    sed -i 's/\r$//g' start-celerybeat.sh && chmod +x start-celerybeat.sh

# Set permissions
RUN chmod -R 755 media staticfiles && \
    chown -R app:app $APP_HOME

USER app

ENTRYPOINT ["./entrypoint.prod.sh"]
